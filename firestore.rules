/**
 * @fileoverview Firestore Security Rules for Prototyping.
 *
 * Core Philosophy:
 * This ruleset prioritizes rapid prototyping by focusing on authorization and skipping schema validation.
 * It uses a strict owner-only access model for user-specific data and public read access where appropriate,
 * but it does not enforce detailed data validation.
 *
 * Data Structure:
 * - /stores/{storeId}: Stores information.
 * - /crew/{crewId}: Crew member information.
 * - /attendance/{attendanceId}: Attendance logs.
 * - /broadcasts/{broadcastId}: Broadcast messages.
 *
 * Key Security Decisions:
 * - User listing is generally disallowed.
 * - Data validation is minimal to allow for flexible schema changes during prototyping.
 * - The rules explicitly deny any write operations that aren't specifically allowed.
 * - Read operations are generally public, assuming no sensitive information is stored.
 *
 * Denormalization for Authorization:
 *  None needed for this simple security model.
 *
 * Structural Segregation:
 *  No separation of private/public data is implemented.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read store data. Only allows creation. Updates and deletes are not allowed.
     * @path /stores/{storeId}
     * @allow (get, list): Any user can read store data.
     * @deny (create, update, delete): No one can create, update or delete store data.
     * @principle Allows public read access to stores data.
     */
    match /stores/{storeId} {
      allow get, list: if true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read crew data. Only allows creation. Updates and deletes are not allowed.
     * @path /crew/{crewId}
     * @allow (get, list): Any user can read crew data.
     * @allow (create): Any user can create crew data.
     * @deny (update, delete): No one can update or delete crew data.
     * @principle Allows public read access to crew data.
     */
    match /crew/{crewId} {
      allow get, list: if true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read attendance data. Only allows creation. Updates and deletes are not allowed.
     * @path /attendance/{attendanceId}
     * @allow (get, list): Any user can read attendance data.
     * @allow (create): Any user can create attendance data.
     * @deny (update, delete): No one can update or delete attendance data.
     * @principle Allows public read access to attendance logs.
     */
    match /attendance/{attendanceId} {
      allow get, list: if true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows anyone to read broadcast messages. Only allows creation. Updates and deletes are not allowed.
     * @path /broadcasts/{broadcastId}
     * @allow (get, list): Any user can read broadcast messages.
     * @allow (create): Any user can create broadcast messages.
     * @deny (update, delete): No one can update or delete broadcast messages.
     * @principle Allows public read access to broadcast messages.
     */
    match /broadcasts/{broadcastId} {
      allow get, list: if true;
      allow create: if true;
      allow update: if false;
      allow delete: if false;
    }
  }
}