/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a basic security model. All collections (stores, crew, attendance, broadcasts) are publicly readable, but all write operations are completely restricted and require implementation of authorization logic.
 *
 * Data Structure:
 * The Firestore database consists of four top-level collections:
 * - /stores/{storeId}: Represents store locations.
 * - /crew/{crewId}: Represents crew members.
 * - /attendance/{attendanceId}: Represents attendance logs.
 * - /broadcasts/{broadcastId}: Represents broadcast messages.
 *
 * Key Security Decisions:
 * - Public Read Access: All collections are publicly readable.
 * - Restricted Writes: All write operations (create, update, delete) are currently denied and require implementation.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to store documents, but restricts all write operations.
     * @path /stores/{storeId}
     * @allow (get, list): Any user can read store information.
     * @deny (create, update, delete): No user can create, update, or delete store information without authorization.
     * @principle Public read, restricted writes.
     */
    match /stores/{storeId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to crew member documents, but restricts all write operations.
     * @path /crew/{crewId}
     * @allow (get, list): Any user can read crew member information.
     * @deny (create, update, delete): No user can create, update, or delete crew member information without authorization.
     * @principle Public read, restricted writes.
     */
    match /crew/{crewId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to attendance log documents, but restricts all write operations.
     * @path /attendance/{attendanceId}
     * @allow (get, list): Any user can read attendance log information.
     * @deny (create, update, delete): No user can create, update, or delete attendance log information without authorization.
     * @principle Public read, restricted writes.
     */
    match /attendance/{attendanceId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Grants public read access to broadcast message documents, but restricts all write operations.
     * @path /broadcasts/{broadcastId}
     * @allow (get, list): Any user can read broadcast message information.
     * @deny (create, update, delete): No user can create, update, or delete broadcast message information without authorization.
     * @principle Public read, restricted writes.
     */
    match /broadcasts/{broadcastId} {
      allow get, list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}